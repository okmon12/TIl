deviceを導入してuser情報を登録し、そのuser情報を引用する場合、ほかの情報は別のテーブルカラムに入れた方が遷移に失敗しない。
ActiveRecordメソッドはテーブル操作に関して使用できるメソッド
・all	テーブルのすべてのデータを取得する
・find	引数にレコードのidを指定し、対応するレコードを取得する
・new	クラスのインスタンス（レコード）を生成する
・save	クラスのインスタンス（レコード）を保存する
例）コントローラーで@users = User.all （userテーブルにuserデータのすべてを保存する）
view画面で遷移する際によく使うヘルパーメソッド
・form_with～	：投稿ページなどにおけるフォームの実装。（←フォームを読み込みたい場合はこっち）
・link_to～	：リンクの実装（画面に飛ぶだけのとき）
JavaScriptとは、クライアントサイドにおいて力を発揮「ブラウザ上でのアプリケーションの使いやすさ」や「リクエストの送り方の工夫」をJavaScriptは担っている。
JavaScriptで使用する変数定義はvar、const、letvar 
・varの場合:ほとんど使われていない。
var sample = "おはよう"

sample = "おはよう"
// 再代入OK

var sample = "おはよう"
// 再定義OK

・constの場合:再定義、再代入不可
const sample = "おはよう"

sample = "おはよう"
// 再代入NG →エラーが起こる

const sample = "おはよう"
// 再定義NG →エラーが起こる

・letの場合:再定義不可、再代入可
let sample = "おはよう"

sample = "おはよう"
// 再代入OK

let sample = "おはよう"
// 再定義NG →エラーが起こる

即時関数とは、関数を定義すると同時に実行される構文です。関数を定義してから呼び出すという手間を省くことができる。

// 無名関数
const countNum = function(num) {
  console.log(num)
}
countNum(1)

// 即時関数
(function countNum(num) {
  console.log(num)
})(1)


アロー関数とは以下のようにfunctionの記述を省略し、その代わりに（）=>という記述によって関数を定義する構文です。より短い記述で関数定義をできるというメリットがあります。

// 無名関数
const 変数名 = function(){
  処理
}

// アロー関数
const 変数名 = () => {
  処理
}
例）const countNum = (num) => {
  console.log(num)
}
countNum(1)

ブラウザのコンソールが面で以下を入力すると"ブラウザオブジェクトの取得に成功！"と表示される。
window.alert("ブラウザオブジェクトの取得に成功！")
↑省略可能  alert("ブラウザオブジェクトの取得に成功！")

HTMLファイルにJavaScriptファイルを読み込むには、htmlファイルに記入する。

例）
index.html
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="index.css">
  <script src="index.js"></script>
  <meta charset="UTF-8">
  <title>JavaScriptの練習サイト</title>
</head>

addEventListener()アドイベントリスナーメソッド
イベント発火の際に実行する関数を定義するためのメソッド。

【例】addEventListenerメソッド
要素.addEventListener('イベント名', 関数)

・インラインスタイルとは、HTML要素の開始タグの中に直接CSSのソースコードを記述するプロパティの指定方法

要素.setAttribute(name, value)
HTML要素に属性を付与することができる。
例）HTML
<div id="test">テスト</div>
例）
const sample = document.getElementById("test")
sample.setAttribute("style", "color: red;")
// <div id="test" style="color: red;">テスト</div> が取得できる

・removeAttributeメソッド
要素.removeAttribute(name)
nameは属性の名前を文字列で指定

例えば、以下のように指定した要素の属性を削除することができる。
例）HTML
<div class="contents" id="apple">りんご</div>
例）removeAttributeメソッドの使用方法
const apple = document.getElementById("apple")
apple.removeAttribute("class")
// <div id="apple">りんご</div> が取得できる