deviceを導入してuser情報を登録し、そのuser情報を引用する場合、ほかの情報は別のテーブルカラムに入れた方が遷移に失敗しない。
ActiveRecordメソッドはテーブル操作に関して使用できるメソッド
・all	テーブルのすべてのデータを取得する
・find	引数にレコードのidを指定し、対応するレコードを取得する
・new	クラスのインスタンス（レコード）を生成する
・save	クラスのインスタンス（レコード）を保存する
例）コントローラーで@users = User.all （userテーブルにuserデータのすべてを保存する）
view画面で遷移する際によく使うヘルパーメソッド
・form_with～	：投稿ページなどにおけるフォームの実装。（←フォームを読み込みたい場合はこっち）
・link_to～	：リンクの実装（画面に飛ぶだけのとき）
JavaScriptとは、クライアントサイドにおいて力を発揮「ブラウザ上でのアプリケーションの使いやすさ」や「リクエストの送り方の工夫」をJavaScriptは担っている。
JavaScriptで使用する変数定義はvar、const、letvar 
・varの場合:ほとんど使われていない。
var sample = "おはよう"

sample = "おはよう"
// 再代入OK

var sample = "おはよう"
// 再定義OK

・constの場合:再定義、再代入不可
const sample = "おはよう"

sample = "おはよう"
// 再代入NG →エラーが起こる

const sample = "おはよう"
// 再定義NG →エラーが起こる

・letの場合:再定義不可、再代入可
let sample = "おはよう"

sample = "おはよう"
// 再代入OK

let sample = "おはよう"
// 再定義NG →エラーが起こる

即時関数とは、関数を定義すると同時に実行される構文です。関数を定義してから呼び出すという手間を省くことができる。

// 無名関数
const countNum = function(num) {
  console.log(num)
}
countNum(1)

// 即時関数
(function countNum(num) {
  console.log(num)
})(1)


アロー関数とは以下のようにfunctionの記述を省略し、その代わりに（）=>という記述によって関数を定義する構文です。より短い記述で関数定義をできるというメリットがあります。

// 無名関数
const 変数名 = function(){
  処理
}

// アロー関数
const 変数名 = () => {
  処理
}
例）const countNum = (num) => {
  console.log(num)
}
countNum(1)